{"ast":null,"code":"import produce from \"immer\";\nimport ActionsData from \"./const\";\nconst INITIAL_STATE = {\n  dataCharacters: [],\n  dataHouses: [],\n  isLoading: false,\n  hasError: false\n};\nexport default function data(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ActionsData.REQUEST:\n      return produce(state, draft => {\n        draft.isLoading = true;\n      });\n\n    case ActionsData.REQUEST_SUCCESS:\n      return produce(state, draft => {\n        draft.dataCharacters = action.payload.dataCharacters;\n        draft.dataHouses = action.payload.dataHouses;\n        draft.isLoading = false;\n      });\n\n    case ActionsData.REQUEST_FAILURE:\n      {\n        return produce(state, draft => {\n          draft.hasError = true;\n          draft.isLoading = false;\n        });\n      }\n\n    case ActionsData.GET_CHARACTER_BY_HOUSE:\n      return produce(state, draft => {\n        draft.isLoading = true;\n      });\n\n    case ActionsData.GET_CHARACTER_BY_HOUSE_SUCCESS:\n      return produce(state, draft => {\n        draft.dataCharacters = action.payload;\n        draft.isLoading = false;\n      });\n\n    case ActionsData.GET_CHARACTER_BY_NAME:\n      return produce(state, draft => {\n        draft.isLoading = true;\n      });\n\n    case ActionsData.GET_CHARACTER_BY_NAME_SUCCESS:\n      return produce(state, draft => {\n        draft.dataCharacters = action.payload;\n        draft.isLoading = false;\n      });\n\n    case ActionsData.GET_CHARACTER_BY_NAME_FAILURE:\n      return produce(state, draft => {\n        draft.dataCharacters = [];\n        draft.isLoading = false;\n        draft.hasError = true;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/tiago.almeida/Documents/www/Github/desafio-tecnico-frontend-react/src/store/modules/data/reducer.js"],"names":["produce","ActionsData","INITIAL_STATE","dataCharacters","dataHouses","isLoading","hasError","data","state","action","type","REQUEST","draft","REQUEST_SUCCESS","payload","REQUEST_FAILURE","GET_CHARACTER_BY_HOUSE","GET_CHARACTER_BY_HOUSE_SUCCESS","GET_CHARACTER_BY_NAME","GET_CHARACTER_BY_NAME_SUCCESS","GET_CHARACTER_BY_NAME_FAILURE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,cAAc,EAAE,EADI;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,SAAS,EAAE,KAHS;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,CAAtB;AAOA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGN,aAAtB,EAAqCO,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,OAAjB;AACE,aAAOX,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,OAFa,CAAd;;AAGF,SAAKJ,WAAW,CAACY,eAAjB;AACE,aAAOb,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACT,cAAN,GAAuBM,MAAM,CAACK,OAAP,CAAeX,cAAtC;AACAS,QAAAA,KAAK,CAACR,UAAN,GAAmBK,MAAM,CAACK,OAAP,CAAeV,UAAlC;AACAQ,QAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACD,OAJa,CAAd;;AAKF,SAAKJ,WAAW,CAACc,eAAjB;AAAkC;AAChC,eAAOf,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,UAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACAM,UAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACD,SAHa,CAAd;AAID;;AACD,SAAKJ,WAAW,CAACe,sBAAjB;AACE,aAAOhB,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,OAFa,CAAd;;AAGF,SAAKJ,WAAW,CAACgB,8BAAjB;AACE,aAAOjB,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACT,cAAN,GAAuBM,MAAM,CAACK,OAA9B;AACAF,QAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACD,OAHa,CAAd;;AAIF,SAAKJ,WAAW,CAACiB,qBAAjB;AACE,aAAOlB,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,OAFa,CAAd;;AAGF,SAAKJ,WAAW,CAACkB,6BAAjB;AACE,aAAOnB,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACT,cAAN,GAAuBM,MAAM,CAACK,OAA9B;AACAF,QAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACD,OAHa,CAAd;;AAIF,SAAKJ,WAAW,CAACmB,6BAAjB;AACE,aAAOpB,OAAO,CAACQ,KAAD,EAASI,KAAD,IAAW;AAC/BA,QAAAA,KAAK,CAACT,cAAN,GAAuB,EAAvB;AACAS,QAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,QAAAA,KAAK,CAACN,QAAN,GAAiB,IAAjB;AACD,OAJa,CAAd;;AAKF;AACE,aAAOE,KAAP;AA1CJ;AA4CD","sourcesContent":["import produce from \"immer\";\nimport ActionsData from \"./const\";\n\nconst INITIAL_STATE = {\n  dataCharacters: [],\n  dataHouses: [],\n  isLoading: false,\n  hasError: false,\n};\n\nexport default function data(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ActionsData.REQUEST:\n      return produce(state, (draft) => {\n        draft.isLoading = true;\n      });\n    case ActionsData.REQUEST_SUCCESS:\n      return produce(state, (draft) => {\n        draft.dataCharacters = action.payload.dataCharacters;\n        draft.dataHouses = action.payload.dataHouses;\n        draft.isLoading = false;\n      });\n    case ActionsData.REQUEST_FAILURE: {\n      return produce(state, (draft) => {\n        draft.hasError = true;\n        draft.isLoading = false;\n      });\n    }\n    case ActionsData.GET_CHARACTER_BY_HOUSE:\n      return produce(state, (draft) => {\n        draft.isLoading = true;\n      });\n    case ActionsData.GET_CHARACTER_BY_HOUSE_SUCCESS:\n      return produce(state, (draft) => {\n        draft.dataCharacters = action.payload;\n        draft.isLoading = false;\n      });\n    case ActionsData.GET_CHARACTER_BY_NAME:\n      return produce(state, (draft) => {\n        draft.isLoading = true;\n      });\n    case ActionsData.GET_CHARACTER_BY_NAME_SUCCESS:\n      return produce(state, (draft) => {\n        draft.dataCharacters = action.payload;\n        draft.isLoading = false;\n      });\n    case ActionsData.GET_CHARACTER_BY_NAME_FAILURE:\n      return produce(state, (draft) => {\n        draft.dataCharacters = [];\n        draft.isLoading = false;\n        draft.hasError = true;\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}