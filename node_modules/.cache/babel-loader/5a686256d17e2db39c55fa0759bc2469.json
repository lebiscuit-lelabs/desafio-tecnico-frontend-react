{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./modules/rootReducer\";\nimport rootSaga from \"./modules/rootSaga\";\nconst sagaMonitor = process.env.NODE_ENV === \"development\" ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nconst enhancer = process.env.NODE_ENV === \"development\" ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/tiago.almeida/Documents/www/Github/desafio-tecnico-frontend-react/src/store/index.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADJ,GAEI,IAHN;AAKA,MAAMC,cAAc,GAAGV,oBAAoB,CAAC;AAC1CG,EAAAA;AAD0C,CAAD,CAA3C;AAIA,MAAMQ,QAAQ,GACZP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIR,OAAO,CAACS,OAAO,CAACC,IAAR,CAAaI,cAAb,EAAD,EAAgCb,eAAe,CAACW,cAAD,CAA/C,CADX,GAEIX,eAAe,CAACW,cAAD,CAHrB;AAKA,MAAMG,KAAK,GAAGhB,WAAW,CAACI,WAAD,EAAcU,QAAd,CAAzB;AAEAD,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./modules/rootReducer\";\nimport rootSaga from \"./modules/rootSaga\";\n\nconst sagaMonitor =\n  process.env.NODE_ENV === \"development\"\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === \"development\"\n    ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware))\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}